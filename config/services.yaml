parameters:
    key: '%env(TRELLO_API_KEY)%'
    token: '%env(TRELLO_API_SECRET)%'
    board_id: '%env(TRELLO_BOARD_ID)%'
    organization_id: '%env(TRELLO_ORGANIZATION_ID)%'
    estimation_plugin_id: '%env(TRELLO_ESTIMATION_PLUGIN_ID)%'
services:
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    scheduler:
        class: Symfony\Component\Scheduler\Scheduler
        tags: ['scheduler']

    App\Command\SaveTrelloDataCommand:
        tags:
            - { name: 'scheduler.task', expression: '0 * * * *' }

    GuzzleHttp\Client:
        arguments:
            $config: [timeout: 4]

    GuzzleHttp\ClientInterface:
        alias: GuzzleHttp\Client

    App\Trello\Client\Config:
        arguments:
            $key: '%key%'
            $token: '%token%'
            $boardId: '%board_id%'
            $organizationId: '%organization_id%'
            $estimationPluginId: '%estimation_plugin_id%'

    gedmo.listener.softdeleteable:
        class: Gedmo\SoftDeleteable\SoftDeleteableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ '@annotation_reader' ] ]

    gedmo.listener.timestampable:
        class: Gedmo\Timestampable\TimestampableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ '@annotation_reader' ] ]

    App\Service\Listener\BlameableListener:
        arguments:
            $tokenStorage: '@security.token_storage'
        tags:
            - { name: doctrine.event_subscriber, connection: default }
